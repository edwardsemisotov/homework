# -*- coding: utf-8 -*-
from functions_package import raindow_draw as rd
from functions_package import branch
from functions_package import snowflake as sf
from functions_package import sun
from functions_package import smile
from functions_package import home
import simple_draw as sd
import random

sd.resolution = (1200, 600)

rd.rainbow_draw_kill_me_pls(step=5, width=5, start_point=sd.get_point(1250, 400), end_point=sd.get_point(800, 700))
home.home(left_bot=(400, 0), r_top=(600, 200))
frame_number = 0

snowflake_list = []
N = 50
for i in range(N):
    snowflake_list.append(sf.sd_spawn_snowflake())

while True:
    sd.start_drawing()
    snowflake_del_list = []
    frame_number += 1

    wind_speed = frame_number % 20
    if wind_speed > 10:
        wind_speed = 20 - wind_speed
    wind_speed = wind_speed - 5
    sd.rectangle(left_bottom=sd.get_point(700, 0), right_top=sd.get_point(1200, 300), color=sd.background_color,
                 width=0)
    sd.rectangle(left_bottom=sd.get_point(390, 390), right_top=sd.get_point(910, 600), color=sd.background_color,
                 width=0)
    branch.branch(point=sd.get_point(1000, 5), angle=90, length=70, wind=wind_speed)
    branch.branch(point=sd.get_point(850, 5), angle=90, length=50, wind=wind_speed)

    sun.sun(point=sd.get_point(600, 500), radius=50, current_shift=frame_number * 5)
    smile.smile(x=600, y=500, color=sd.COLOR_BLACK)
    for i in range(len(snowflake_list)):
        snowflake = snowflake_list[i]
        point = sd.get_point(*snowflake[0:2])
        snowflake[0] -= random.randint(11, 18) / 10
        if snowflake[1] > 50:
            snowflake[1] -= snowflake[3]
        else:
            snowflake_del_list.append(i)
        sd.snowflake(center=point, length=snowflake[2], color=sd.background_color)

    for snowflake in snowflake_list:
        point = sd.get_point(*snowflake[0:2])
        sd.snowflake(center=point, length=snowflake[2])

    for i in reversed(snowflake_del_list):
        del snowflake_list[i]
        snowflake_list.append(sf.sd_spawn_snowflake())
    sd.finish_drawing()

    if sd.user_want_exit():
        break
    sd.sleep(0.1)

sd.pause()
# –°–æ–∑–¥–∞—Ç—å –ø–∞–∫–µ—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–π —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —É—Ä–æ–∫–∞
#  - —Ä–∞–¥—É–≥–∏
#  - —Å—Ç–µ–Ω—ã
#  - –¥–µ—Ä–µ–≤–∞
#  - —Å–º–∞–π–ª–∏–∫–∞
#  - —Å–Ω–µ–∂–∏–Ω–æ–∫
# –§—É–Ω–∫—Ü–∏–∏ –ø–æ –º–æ–¥—É–ª—è–º —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ. –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –∏ –º–æ–¥—É–ª–µ–π - –ø–æ —Å–º—ã—Å–ª—É.
# –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–∏—Ä–ø–∏—á–Ω–æ–≥–æ –¥–æ–º–∞ —Å —à–∏—Ä–æ–∫–∏–º –æ–∫–Ω–æ–º –∏ –∫—Ä—ã—à–µ–π.

# –° –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —ç–ø–æ—Ö–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ—Ç–Ω–æ "–£—Ç—Ä–æ –≤ –¥–µ—Ä–µ–≤–Ω–µ".
# –ù–∞ –∫–∞—Ä—Ç–∏–Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å:
#  - –∫–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º, –≤ –æ–∫–æ—à–∫–µ - —Å–º–∞–π–ª–∏–∫.
#  - —Å–ª–µ–≤–∞ –æ—Ç –¥–æ–º–∞ - —Å—É–≥—Ä–æ–± (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —ç—Ç–æ —Ä–∞–Ω–Ω—è—è –≤–µ—Å–Ω–∞)
#  - —Å–ø—Ä–∞–≤–∞ –æ—Ç –¥–æ–º–∞ - –¥–µ—Ä–µ–≤–æ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ)
#  - —Å–ø—Ä–∞–≤–∞ –≤ –Ω–µ–±–µ - —Ä–∞–¥—É–≥–∞, —Å–ª–µ–≤–∞ - —Å–æ–ª–Ω—Ü–µ (–≤–µ—Å–Ω–∞ –∂–µ!)
# –ø—Ä–∏–º–µ—Ä —Å–º. lesson_005/results/04_painting.jpg
# –ü—Ä–∏–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ–π —Ñ–∞–Ω—Ç–∞–∑–∏–µ–π –ø–æ –≤–∫—É—Å—É (–∫–æ—Ç—ã? –∫–æ—Ä–æ–≤—ã? –ª—é–¥–∏? —Ç—Ä–∞–∫—Ç–æ—Ä? —á—Ç–æ –ø—Ä–∏–¥—É–º–∞–µ—Ç—Å—è)


# –£—Å–ª–æ–∂–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–¥–µ–ª–∞—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é)
# –ê–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω—É.
# –ü—É—Å—Ç—å —Å–ª–µ–≤–∞ –∏–¥–µ—Ç —Å–Ω–µ–≥–æ–ø–∞–¥, —Ä–∞–¥—É–≥–∞ –ø–µ—Ä–µ–ª–∏–≤–∞–µ—Ç—Å—è —Ü–≤–µ—Ç–∞–º–∏, —Å–º–∞–π–ª–∏–∫ –º–æ—Ä–≥–∞–µ—Ç, —Å–æ–ª–Ω—Ü–µ –∫—Ä—É—Ç–∏—Ç –ª—É—á–∞–º–∏, –µ—Ç—Å.
# –ó–∞–¥–µ—Ä–∂–∫—É –≤ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–∞–¥–æ —Å—Ç–∞–≤–∏—Ç—å, –ø—É—Å—Ç—å –¥–∞–∂–µ 0.01 —Å–µ–∫ - —Ç–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É—Å—Ç–æ–π—á–∏–≤–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç.

# –∑–∞—á—ë—Ç! üöÄ
