# -*- coding: utf-8 -*-


# –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ç–æ—Ç–∏–ø –∏–≥—Ä—ã –ê–ª—Ö–∏–º–∏—è: –ø—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π.
# –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: –í–æ–¥–∞, –í–æ–∑–¥—É—Ö, –û–≥–æ–Ω—å, –ó–µ–º–ª—è, –®—Ç–æ—Ä–º, –ü–∞—Ä, –ì—Ä—è–∑—å, –ú–æ–ª–Ω–∏—è, –ü—ã–ª—å, –õ–∞–≤–∞.
# –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å.
# –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π:
#   –í–æ–¥–∞ + –í–æ–∑–¥—É—Ö = –®—Ç–æ—Ä–º
#   –í–æ–¥–∞ + –û–≥–æ–Ω—å = –ü–∞—Ä
#   –í–æ–¥–∞ + –ó–µ–º–ª—è = –ì—Ä—è–∑—å
#   –í–æ–∑–¥—É—Ö + –û–≥–æ–Ω—å = –ú–æ–ª–Ω–∏—è
#   –í–æ–∑–¥—É—Ö + –ó–µ–º–ª—è = –ü—ã–ª—å
#   –û–≥–æ–Ω—å + –ó–µ–º–ª—è = –õ–∞–≤–∞

# –°–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ __add__
# –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω - —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å None
# –í—ã–≤–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ __str__
#
# –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π:
#   print(Water(), '+', Air(), '=', Water() + Air())
#   print(Fire(), '+', Air(), '=', Fire() + Air())


class BaseElement:
    next_el_id = 0
    transformation_rules = {}

    def __init__(self):
        this_el = type(self)
        self.register_element(this_el)

    def add_transformation(self, el_1, el_2, result):
        if el_1 not in BaseElement.transformation_rules:
            BaseElement.transformation_rules[el_1] = {}
        BaseElement.transformation_rules[el_1][el_2] = result

    def register_element(self, this_el):
        if 'el_id' in dir(this_el):
            return
        this_el.el_id = BaseElement.next_el_id
        BaseElement.next_el_id += 1
        self.add_transformation(this_el.el_id, this_el.el_id, this_el)
        if 'get_transformations' in dir(this_el):
            for key, value in this_el().get_transformations().items():
                self.register_element(key)
                self.add_transformation(key.el_id, this_el.el_id, value)
                self.add_transformation(this_el.el_id, key.el_id, value)

    def __str__(self):
        return self.el_name

    def __add__(self, other):
        self_rules = BaseElement.transformation_rules[self.el_id]
        if other.el_id not in self_rules:
            return None
        return self_rules[other.el_id]()


class Water(BaseElement):
    el_name = '–≤–æ–¥–∞'

    def get_transformations(self):
        return {Air: Storm,
                Fire: Steam,
                Earth: Mud}


class Air(BaseElement):
    el_name = '–≤–æ–∑–¥—É—Ö'

    def get_transformations(self):
        return {Fire: Lightning,
                Earth: Dust}


class Fire(BaseElement):
    el_name = '–æ–≥–æ–Ω—å'

    def get_transformations(self):
        return {Earth: Lava}


class Earth(BaseElement):
    el_name = '–∑–µ–º–ª—è'


class Storm(BaseElement):
    el_name = '—à—Ç–æ—Ä–º'


class Steam(BaseElement):
    el_name = '–ø–∞—Ä'


class Mud(BaseElement):
    el_name = '–≥—Ä—è–∑—å'


class Lightning(BaseElement):
    el_name = '–º–æ–ª–Ω–∏—è'


class Dust(BaseElement):
    el_name = '–ø—ã–ª—å'


class Lava(BaseElement):
    el_name = '–ª–∞–≤–∞'


print(Air() + Fire())
print(Earth() + Water())
print(Water() + Water())
print(Water() + Storm())

# –£—Å–ª–æ–∂–Ω–µ–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–¥–µ–ª–∞—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é)
# –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —ç–ª–µ–º–µ–Ω—Ç –≤ –∏–≥—Ä—É.
# –ü—Ä–∏–¥—É–º–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏ —Å–ª–æ–∂–µ–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –Ω–æ–≤—ã–º.

# –∑–∞—á—ë—Ç! üöÄ
